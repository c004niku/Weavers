@using GridMvc.Html
@model NewsModel
@{
    ViewBag.Title = "Video";
    ViewBag.Header = "Video for Weaver app";
    ViewBag.OptionalDescription = "All Video for app";
}

<div class="card card-lime">
    <div class="card-header">
        <h3 class="card-title">Video List</h3>

        <div class="card-tools">
            <button type="button" class="btn btn-tool" data-card-widget="collapse">
                <i class="fas fa-minus"></i>
            </button>
        </div>
        <!-- /.card-tools -->
    </div>
    <!-- /.card-header -->
    <div class="card-body">
        <div class="col-sm-5 text-right">
            <button type="button" class="btn btn-secondary btn-block btn-flat  btn-primary additem" onclick="addNewValue('Video')">Add Video</button>
        </div>
        @Html.Grid(Model.Reports).Columns(columns =>
   {
       columns.Add().Encoded(false)
      .Sanitized(false)
      .SetWidth(80)
      .RenderValueAs(o => string.Format("<img src='{1}/UploadFiles/RepotItem/{0}' height='50px' width='80px'", o.Images.FirstOrDefault(), TempData["WebsiteName"]));
       columns.Add(c => c.Title).Titled("Title").Filterable(false);
       columns.Add(c => c.CreatedOn).Titled("Date").Filterable(false);
       columns.Add(c => c.Range).Titled("Range").Filterable(false);
       columns.Add().Encoded(false)
       .Sanitized(false)
       .SetWidth(30)
       .RenderValueAs(o => Html.ActionLink("Delete", "Delete", "Alert", new { id = o.Id }));
       columns.Add()
       .Encoded(false)
       .Sanitized(false)
       .SetWidth(30)
       .RenderValueAs(o => "<a href='#' onclick='UpdateRule(this)' id=" + o.Id + " description=" + o.ShortDescription + ">Update</a>");

   }).WithPaging(5).Sortable(true)
    </div>
</div>

